version: 2
jobs:
  build:  # required for runs that don't use workflows
    working_directory: ~/circleci-demo-python-django
    docker: #  The steps of a job occur in a virtual environment called an executor. Docker is our executor here
      - image: circleci/python:3.6.4  # primary container for the build job
        environment: # Use this to set environment variables
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2 # an example of how to specify a service container
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    # ONCE THE Environment is setup and containers are ready, now create STEPS to RUN commands
    steps:
      - checkout  # checkout source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin # Access Grant to dependency location
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      # Use the restore_cache step to restore cached files or directories.
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
           command: |
             sudo pip install pipenv
             pipenv install
    #Use the save_cache step to cache certain files or directories.
      - save_cache:
           key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
           paths:
             - ".venv"
             - "/usr/local/bin"
             - "/usr/local/lib/python3.6/site-packages"
      - run:
          command: |  # use pipenv to install dependencies , pipenv == Virtual Environment
            sudo pip install pipenv
            pipenv install
      - run:
          command: |
            pipenv run python manage.py test
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1